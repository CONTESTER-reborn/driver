name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHON_VERSION: "3.10"
  POETRY_VERSION: "1.7.1"


jobs:
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
        poetry-version: [ "1.7.1" ]
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Run flake8
        run: poetry run flake8 . --count --show-source --statistics
      - name: Run isort
        run: poetry run isort . --check
      - name: Run mypy
        run: poetry run mypy .
